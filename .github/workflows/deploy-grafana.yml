name: Deploy Grafana

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Create .env from secrets
        run: |
          echo "GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${{ secrets.GF_AUTH_GENERIC_OAUTH_CLIENT_ID }}" >> .env
          echo "GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${{ secrets.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET }}" >> .env
          echo "GF_AUTH_GENERIC_OAUTH_SCOPES=${{ secrets.GF_AUTH_GENERIC_OAUTH_SCOPES }}" >> .env
          echo "GF_AUTH_GENERIC_OAUTH_AUTH_URL=${{ secrets.GF_AUTH_GENERIC_OAUTH_AUTH_URL }}" >> .env
          echo "GF_AUTH_GENERIC_OAUTH_TOKEN_URL=${{ secrets.GF_AUTH_GENERIC_OAUTH_TOKEN_URL }}" >> .env
          echo "GF_SERVER_ROOT_URL=http://localhost:3000" >> .env

      - name: Run Grafana with Docker Compose
        run: |
          docker compose down || true
          docker compose up -d

      - name: Wait for Grafana to be healthy
        run: |
          echo "Waiting for Grafana to start..."
          for i in {1..10}; do
            if curl --fail http://localhost:3000; then
              echo "Grafana is up!"
              exit 0
            fi
            echo "Retrying in 5 seconds..."
            sleep 5
          done
          echo "Grafana failed to start"
          exit 1

      - name: Show logs on failure
        if: failure()
        run: docker compose logs
